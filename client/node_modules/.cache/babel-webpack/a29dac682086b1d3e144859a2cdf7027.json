{"ast":null,"code":"import _asyncToGenerator from \"/home/sebastian/Documentos/BBDD_NoSQL/proyectos/practica3/geoplaces/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/items/items.service\";\nimport * as i2 from \"../../components/layout/layout.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../ui/item-card/item-card.component\";\n\nfunction TengoCercaHomeComponent_app_item_card_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-item-card\", 4);\n  }\n\n  if (rf & 2) {\n    const itemCerca_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"item\", itemCerca_r1)(\"horizontalStyle\", true)(\"showDistance\", true);\n  }\n}\n\nexport class TengoCercaHomeComponent {\n  constructor(itemsSrv) {\n    this.itemsSrv = itemsSrv;\n    this.tengoCercaLista = [];\n    this.tengoCercaCerveceriasLista = [];\n  }\n\n  ngOnInit() {\n    this.getNearestItems();\n  }\n\n  getNearestItems() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let resp = yield _this.itemsSrv.getNearestItems();\n      resetLists();\n\n      if (resp && resp.exito && resp.lugares && resp.lugares.length >= 0) {\n        _this.tengoCercaLista = resp.lugares;\n\n        _this.tengoCercaLista.forEach(item => {\n          _this.splitToOtherLists(item);\n        });\n      } else {\n        alert(resp.messages);\n      }\n    })();\n  }\n\n  resetLists() {\n    this.tengoCercaCerveceriasLista = [];\n  }\n\n  splitToOtherLists(item) {\n    switch (item.categoria) {\n      case 'cervecerias':\n        this.tengoCercaCerveceriasLista.push(item);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n}\n\nTengoCercaHomeComponent.ɵfac = function TengoCercaHomeComponent_Factory(t) {\n  return new (t || TengoCercaHomeComponent)(i0.ɵɵdirectiveInject(i1.ItemsService));\n};\n\nTengoCercaHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TengoCercaHomeComponent,\n  selectors: [[\"app-tengo-cerca-home\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"page-title\"], [1, \"page-content\"], [1, \"page-grid\"], [3, \"item\", \"horizontalStyle\", \"showDistance\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\", \"horizontalStyle\", \"showDistance\"]],\n  template: function TengoCercaHomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-layout\");\n      i0.ɵɵelementStart(1, \"h1\", 0);\n      i0.ɵɵtext(2, \"\\u00BFQu\\u00E9 tengo cerca?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtemplate(5, TengoCercaHomeComponent_app_item_card_5_Template, 1, 3, \"app-item-card\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tengoCercaLista);\n    }\n  },\n  directives: [i2.LayoutComponent, i3.NgForOf, i4.ItemCardComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZW5nby1jZXJjYS1ob21lLmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/sebastian/Documentos/BBDD_NoSQL/proyectos/practica3/geoplaces/client/src/app/pages/tengo-cerca-home/tengo-cerca-home.component.ts","/home/sebastian/Documentos/BBDD_NoSQL/proyectos/practica3/geoplaces/client/src/app/pages/tengo-cerca-home/tengo-cerca-home.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ItemsService } from 'src/app/services/items/items.service';\n\n@Component({\n  selector: 'app-tengo-cerca-home',\n  templateUrl: './tengo-cerca-home.component.html',\n  styleUrls: ['./tengo-cerca-home.component.scss']\n})\nexport class TengoCercaHomeComponent implements OnInit {\n\n  tengoCercaLista = [];\n  tengoCercaCerveceriasLista: any[] = [];\n  \n  constructor(private itemsSrv: ItemsService) { }\n\n  ngOnInit(): void {\n    this.getNearestItems();\n  }\n\n  async getNearestItems(){\n    let resp = await this.itemsSrv.getNearestItems();\n    \n    resetLists();\n    if(resp && resp.exito && resp.lugares && resp.lugares.length >= 0){\n      this.tengoCercaLista = resp.lugares;\n      this.tengoCercaLista.forEach(item => {\n        this.splitToOtherLists(item);\n      })\n    } else {\n      alert(resp.messages);\n    }\n  }\n\n  resetLists(){\n    this.tengoCercaCerveceriasLista = [];\n  }\n\n  splitToOtherLists(item: any){\n    switch (item.categoria) {\n      case 'cervecerias':\n        this.tengoCercaCerveceriasLista.push(item);\n        break;\n    \n      default:\n        break;\n    }\n  }\n}","<app-layout>\n    <h1 class=\"page-title\">¿Qué tengo cerca?</h1>\n    <div class=\"page-content\">\n        <div class=\"page-grid\">\n            <app-item-card *ngFor=\"let itemCerca of tengoCercaLista\" [item]=\"itemCerca\" [horizontalStyle]=\"true\" [showDistance]=\"true\"></app-item-card>\n        </div>\n    </div>\n</app-layout>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}