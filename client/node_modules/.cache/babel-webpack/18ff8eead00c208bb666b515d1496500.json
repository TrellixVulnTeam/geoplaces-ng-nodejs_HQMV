{"ast":null,"code":"import _asyncToGenerator from \"/home/sebastian/Documentos/BBDD_NoSQL/proyectos/practica3/geoplaces/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { NEAREST_KM } from 'src/app/services/items/items.service';\nlet TengoCercaHomeComponent = class TengoCercaHomeComponent {\n  constructor(itemsSrv) {\n    this.itemsSrv = itemsSrv;\n    this.tengoCercaLista = [];\n    this.tengoCercaCerveceriasLista = [];\n    this.tengoCercaUniversidadesLista = [];\n    this.tengoCercaFarmaciasLista = [];\n    this.tengoCercaCaesLista = [];\n    this.tengoCercaSupermercadosLista = [];\n    this.kms = NEAREST_KM;\n  }\n\n  ngOnInit() {\n    this.getNearestItems();\n  }\n\n  getNearestItems() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      navigator.geolocation.getCurrentPosition( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (locationResp) {\n          let resp = yield _this.itemsSrv.getNearestItems(locationResp.coords.latitude, locationResp.coords.longitude);\n\n          _this.resetLists();\n\n          if (resp && resp.exito && resp.lugares && resp.lugares.length >= 0) {\n            _this.tengoCercaLista = resp.lugares;\n\n            _this.tengoCercaLista.forEach(item => {\n              _this.splitToOtherLists(item);\n            });\n          } else {\n            alert(resp.messages);\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  resetLists() {\n    this.tengoCercaCerveceriasLista = [];\n    this.tengoCercaCaesLista = [];\n    this.tengoCercaFarmaciasLista = [];\n    this.tengoCercaLista = [];\n    this.tengoCercaSupermercadosLista = [];\n    this.tengoCercaUniversidadesLista = [];\n  }\n\n  splitToOtherLists(item) {\n    switch (item.categoria) {\n      case 'cervecerias':\n        this.tengoCercaCerveceriasLista.push(item);\n        break;\n\n      case 'caes':\n        this.tengoCercaCaesLista.push(item);\n        break;\n\n      case 'farmacias':\n        this.tengoCercaFarmaciasLista.push(item);\n        break;\n\n      case 'supermercados':\n        this.tengoCercaSupermercadosLista.push(item);\n        break;\n\n      case 'universidades':\n        this.tengoCercaUniversidadesLista.push(item);\n        break;\n    }\n  }\n\n};\nTengoCercaHomeComponent = __decorate([Component({\n  selector: 'app-tengo-cerca-home',\n  templateUrl: './tengo-cerca-home.component.html',\n  styleUrls: ['./tengo-cerca-home.component.scss'],\n  styles: []\n})], TengoCercaHomeComponent);\nexport { TengoCercaHomeComponent };","map":{"version":3,"sources":["/home/sebastian/Documentos/BBDD_NoSQL/proyectos/practica3/geoplaces/client/src/app/pages/tengo-cerca-home/tengo-cerca-home.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAAkC,eAAlC;AACA,SAAuB,UAAvB,QAAyC,sCAAzC;AAOA,IAAa,uBAAuB,GAApC,MAAa,uBAAb,CAAoC;AAWlC,EAAA,WAAA,CAAoB,QAApB,EAA0C;AAAtB,SAAA,QAAA,GAAA,QAAA;AATpB,SAAA,eAAA,GAAkB,EAAlB;AACA,SAAA,0BAAA,GAAoC,EAApC;AACA,SAAA,4BAAA,GAAsC,EAAtC;AACA,SAAA,wBAAA,GAAkC,EAAlC;AACA,SAAA,mBAAA,GAA6B,EAA7B;AACA,SAAA,4BAAA,GAAsC,EAAtC;AAEA,SAAA,GAAA,GAAM,UAAN;AAE+C;;AAE/C,EAAA,QAAQ,GAAA;AACN,SAAK,eAAL;AACD;;AAEK,EAAA,eAAe,GAAA;AAAA;;AAAA;AACnB,MAAA,SAAS,CAAC,WAAV,CAAsB,kBAAtB;AAAA,qCAA0C,WAAM,YAAN,EAAqB;AAC7D,cAAI,IAAI,SAAS,KAAI,CAAC,QAAL,CAAc,eAAd,CAA8B,YAAY,CAAC,MAAb,CAAoB,QAAlD,EAA4D,YAAY,CAAC,MAAb,CAAoB,SAAhF,CAAjB;;AAEA,UAAA,KAAI,CAAC,UAAL;;AAEA,cAAG,IAAI,IAAI,IAAI,CAAC,KAAb,IAAsB,IAAI,CAAC,OAA3B,IAAsC,IAAI,CAAC,OAAL,CAAa,MAAb,IAAuB,CAAhE,EAAkE;AAChE,YAAA,KAAI,CAAC,eAAL,GAAuB,IAAI,CAAC,OAA5B;;AACA,YAAA,KAAI,CAAC,eAAL,CAAqB,OAArB,CAA6B,IAAI,IAAG;AAClC,cAAA,KAAI,CAAC,iBAAL,CAAuB,IAAvB;AACD,aAFD;AAGD,WALD,MAKO;AACL,YAAA,KAAK,CAAC,IAAI,CAAC,QAAN,CAAL;AACD;AACF,SAbD;;AAAA;AAAA;AAAA;AAAA;AADmB;AAgBpB;;AAED,EAAA,UAAU,GAAA;AACR,SAAK,0BAAL,GAAkC,EAAlC;AACA,SAAK,mBAAL,GAA2B,EAA3B;AACA,SAAK,wBAAL,GAAgC,EAAhC;AACA,SAAK,eAAL,GAAuB,EAAvB;AACA,SAAK,4BAAL,GAAoC,EAApC;AACA,SAAK,4BAAL,GAAoC,EAApC;AACD;;AAED,EAAA,iBAAiB,CAAC,IAAD,EAAU;AACzB,YAAQ,IAAI,CAAC,SAAb;AACE,WAAK,aAAL;AACE,aAAK,0BAAL,CAAgC,IAAhC,CAAqC,IAArC;AACA;;AACF,WAAK,MAAL;AACE,aAAK,mBAAL,CAAyB,IAAzB,CAA8B,IAA9B;AACA;;AACF,WAAK,WAAL;AACE,aAAK,wBAAL,CAA8B,IAA9B,CAAmC,IAAnC;AACA;;AACF,WAAK,eAAL;AACE,aAAK,4BAAL,CAAkC,IAAlC,CAAuC,IAAvC;AACA;;AACF,WAAK,eAAL;AACE,aAAK,4BAAL,CAAkC,IAAlC,CAAuC,IAAvC;AACA;AAfJ;AAiBD;;AA9DiC,CAApC;AAAa,uBAAuB,GAAA,UAAA,CAAA,CALnC,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,sBADD;AAET,EAAA,WAAW,EAAE,mCAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,mCAAD,CAHF;;AAAA,CAAD,CAK0B,CAAA,EAAvB,uBAAuB,CAAvB;SAAA,uB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ItemsService, NEAREST_KM } from 'src/app/services/items/items.service';\n\n@Component({\n  selector: 'app-tengo-cerca-home',\n  templateUrl: './tengo-cerca-home.component.html',\n  styleUrls: ['./tengo-cerca-home.component.scss']\n})\nexport class TengoCercaHomeComponent implements OnInit {\n\n  tengoCercaLista = [];\n  tengoCercaCerveceriasLista: any[] = [];\n  tengoCercaUniversidadesLista: any[] = [];\n  tengoCercaFarmaciasLista: any[] = [];\n  tengoCercaCaesLista: any[] = [];\n  tengoCercaSupermercadosLista: any[] = [];\n\n  kms = NEAREST_KM;\n\n  constructor(private itemsSrv: ItemsService) { }\n\n  ngOnInit(): void {\n    this.getNearestItems();\n  }\n\n  async getNearestItems(){\n    navigator.geolocation.getCurrentPosition( async locationResp => {\n      let resp = await this.itemsSrv.getNearestItems(locationResp.coords.latitude, locationResp.coords.longitude);\n    \n      this.resetLists();\n\n      if(resp && resp.exito && resp.lugares && resp.lugares.length >= 0){\n        this.tengoCercaLista = resp.lugares;\n        this.tengoCercaLista.forEach(item => {\n          this.splitToOtherLists(item);\n        })\n      } else {\n        alert(resp.messages);\n      }\n    });\n    \n  }\n\n  resetLists(){\n    this.tengoCercaCerveceriasLista = [];\n    this.tengoCercaCaesLista = [];\n    this.tengoCercaFarmaciasLista = [];\n    this.tengoCercaLista = [];\n    this.tengoCercaSupermercadosLista = [];\n    this.tengoCercaUniversidadesLista = [];\n  }\n\n  splitToOtherLists(item: any){\n    switch (item.categoria) {\n      case 'cervecerias':\n        this.tengoCercaCerveceriasLista.push(item);\n        break;\n      case 'caes':\n        this.tengoCercaCaesLista.push(item);\n        break;\n      case 'farmacias':\n        this.tengoCercaFarmaciasLista.push(item);\n        break;\n      case 'supermercados':\n        this.tengoCercaSupermercadosLista.push(item);\n        break;\n      case 'universidades':\n        this.tengoCercaUniversidadesLista.push(item);\n        break;\n    }\n  }\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}